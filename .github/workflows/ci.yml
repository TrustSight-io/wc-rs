name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
        exclude:
          # Reduce CI load by testing beta only on Ubuntu
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: beta

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Generate test data (Unix only)
      if: runner.os != 'Windows'
      run: |
        cd tests/data
        chmod +x generate_large.sh
        ./generate_large.sh

    - name: Run integration tests (Unix only)
      if: runner.os != 'Windows'
      run: cargo test --test integration_tests

    - name: Run benchmarks (Unix only)
      if: runner.os != 'Windows'
      run: |
        chmod +x scripts/benchmark.sh
        ./scripts/benchmark.sh

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Run security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Generate test data
      run: |
        cd tests/data
        chmod +x generate_large.sh
        ./generate_large.sh
    - name: Run coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false 